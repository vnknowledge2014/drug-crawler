{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/controllers/crawler/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,wCAAyC;AACzC,6DAA+B;AAC/B,oCAA0C;AAC1C,+DAAoD;AAGpD,MAAM,kBAAkB,GAAG,mBAAU,CAAC,CAAC,CAAC,mBAAU,CAAC,CAAC,CAAC,UAAU,CAAC;AAEzD,MAAM,WAAW,GAAG,GAAS,EAAE;IAClC,MAAM,cAAc,GAAG,EAAE,CAAA;IACzB,MAAM,UAAU,GAAG,EAAE,CAAA;IACrB,MAAM,sBAAsB,GAAG,EAAE,CAAA;IAEjC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE;QACnC,MAAM,EAAE,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAA,yBAAO,EAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC7C,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;KAC7B;IACD,MAAM,GAAG,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC;IAClC,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;IAE3B,KAAI,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;QAClD,MAAM,EAAE,GAAS,OAAO,CAAC,GAAG,CAAS,CAAC;QACtC,sBAAsB,CAAC,IAAI,iCAAK,EAAE,KAAE,UAAU,EAAE,IAAA,oBAAa,EAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAE,CAAA;KACrJ;IACD,KAAI,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,sBAAsB,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;QACjE,MAAM,EAAE,GAAS,sBAAsB,CAAC,GAAG,CAAS,CAAA;QACpD,UAAU,CAAC,IAAI,CAAC,kBAAE,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;KACxE;IACD,MAAM,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAClC,CAAC,CAAA,CAAA;AArBY,QAAA,WAAW,eAqBvB","sourcesContent":["import { COLLECTION } from \"@src/config\";\nimport db from \"@src/database\";\nimport { convertViToEn } from \"@src/libs\";\nimport { httpGet } from \"@src/libs/request_crawler\";\nimport { Drug } from \"@src/types\";\n\nconst COLLECTION_DEFAULT = COLLECTION ? COLLECTION : 'drugbank';\n\nexport const drugCrawler = async () => {\n    const drugCollection = []\n    const promiseArr = []\n    const drugCollectionModifier = []\n\n    for (let idx = 0; idx <= 51; idx += 1) {\n        const rs = await Promise.all([httpGet(idx)]);\n        drugCollection.push(...rs)\n    }\n    const des = drugCollection.flat();\n    const flatten = des.flat(); \n    \n    for(let idx = 0; idx <= flatten.length - 1; idx += 1) {\n        const rs: Drug = flatten[idx] as Drug;\n        drugCollectionModifier.push({...rs, tenThuocEn: convertViToEn(rs.tenThuoc), meta: { fileName: `${process.env.DRUGBANKDOCS}${rs.meta.fileName}` }})\n    }\n    for(let idx = 0; idx <= drugCollectionModifier.length - 1; idx += 1) {\n        const rs: Drug = drugCollectionModifier[idx] as Drug\n        promiseArr.push(db.collection(COLLECTION_DEFAULT).doc(rs.id).set(rs))\n    }\n    await Promise.all(promiseArr);   \n}"]}