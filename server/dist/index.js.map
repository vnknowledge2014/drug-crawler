{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oDAA4B;AAC5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,mDAAuD;AACvD,4EAA2C;AAC3C,+CAAiC;AACjC,2CAA6B;AAC7B,+BAAkD;AAElD,MAAM,KAAK,GAAG,CAAO,GAAgB,EAAE,EAAE;IACvC,MAAM,KAAK,GAAG,IAAA,gBAAM,GAAE,CAAC;IAEvB,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,iBAAW,CAAC,CAAC;IAClC,KAAK,CAAC,GAAG,CAAC,UAAU,EAAE,kBAAY,CAAC,CAAC;IAEpC,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IACxB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACf,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,CAAC;IACrC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC3B,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;IAC7B,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC;IAChC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;IACvB,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC3B,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;IAC1B,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,4BAA4B,EAAE,CAAC,CAAC;IAC/C,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC;IACjC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;IAE5B,GAAG,CAAC,GAAG,CACL,IAAA,4BAAS,EAAC;QACR,QAAQ,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI;QACxB,GAAG,EAAE,IAAI,EAAE,6CAA6C;KACzD,CAAC,CACH,CAAC;IAEF,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IAE1B,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IAE1C,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAEpC,OAAO,CAAC,GAAG,CAAC,4BAA4B,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAC9D,CAAC,CAAA,CAAC;AAEF,KAAK,CAAC,IAAA,iBAAO,GAAE,CAAC,CAAC","sourcesContent":["import dotenv from \"dotenv\";\ndotenv.config();\n\nimport express, { Application, Router } from \"express\";\nimport rateLimit from \"express-rate-limit\";\nimport * as helmet from \"helmet\";\nimport * as http from \"http\";\nimport { searchRoute, crawlerRoute } from \"./api\";\n\nconst mount = async (app: Application) => {\n  const route = Router();\n\n  route.use('/search', searchRoute);\n  route.use('/crawler', crawlerRoute);\n\n  app.use(express.json());\n  app.use(route);\n  app.use(helmet.dnsPrefetchControl());\n  app.use(helmet.expectCt());\n  app.use(helmet.frameguard());\n  app.use(helmet.hidePoweredBy());\n  app.use(helmet.hsts());\n  app.use(helmet.ieNoOpen());\n  app.use(helmet.noSniff());\n  app.use(helmet.permittedCrossDomainPolicies());\n  app.use(helmet.referrerPolicy());\n  app.use(helmet.xssFilter());\n\n  app.use(\n    rateLimit({\n      windowMs: 15 * 60 * 1000, // 15 minutes\n      max: 1000, // limit each IP to 100 requests per windowMs\n    })\n  );\n\n  app.set(\"trust proxy\", 1);\n\n  const httpServer = http.createServer(app);\n  \n  httpServer.listen(process.env.PORT);\n\n  console.log(`[app] : http://localhost:${process.env.PORT}`);\n};\n\nmount(express());"]}